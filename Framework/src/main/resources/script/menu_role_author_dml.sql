/* ##################################################################### */

CREATE TABLE TB_COMM_CDL
  (
    CL_CODE     CHAR (3) NOT NULL ,
    CL_CODE_NM  VARCHAR (60) ,
    CL_CODE_DC  VARCHAR (200) ,
    USE_AT      CHAR (1) ,
    CREATE_DT   DATETIME ,
    CREATE_USER VARCHAR (20) ,
    UPDATE_DT   DATETIME ,
    UPDATE_USER VARCHAR (20),
    PRIMARY KEY (CL_CODE)
  ) ;

CREATE UNIQUE INDEX TB_COMM_CDL_PK ON TB_COMM_CDL
(
  CL_CODE
)
;

/* ##################################################################### */

CREATE TABLE TB_COMM_CD
  (
    CODE_ID             VARCHAR (6) NOT NULL ,
    CODE_ID_NM          VARCHAR (60) ,
    CODE_ID_DC          VARCHAR (200) ,
    USE_AT              CHAR (1) ,
    CL_CODE             CHAR (3) ,
    CREATE_DT           DATETIME ,
    CREATE_USER         VARCHAR (20) ,
    UPDATE_DT           DATETIME ,
    UPDATE_USER         VARCHAR (20) ,
    TB_COMM_CDL_CL_CODE CHAR (3) NOT NULL,
    PRIMARY KEY (CODE_ID),
    FOREIGN KEY TB_COMM_CD_FK1 (CL_CODE) REFERENCES TB_COMM_CDL(CL_CODE)
  ) ;

CREATE UNIQUE INDEX TB_COMM_CD_PK ON TB_COMM_CD
(
  CODE_ID
)
;

CREATE INDEX TB_COMM_CD_i01 ON TB_COMM_CD
(
  CL_CODE
)
;

/* ##################################################################### */

CREATE TABLE TB_COMM_CDD
  (
    CODE_ID            VARCHAR (6) NOT NULL ,
    CODE               VARCHAR (15) NOT NULL ,
    CODE_NM            VARCHAR (60) ,
    CODE_DC            VARCHAR (200) ,
    USE_AT             CHAR (1) ,
    CREATE_DT          DATETIME ,
    CREATE_USER        VARCHAR (20) ,
    UPDATE_DT          DATETIME ,
    UPDATE_USER        VARCHAR (20) ,
    TB_COMM_CD_CODE_ID VARCHAR (6) NOT NULL,
    PRIMARY KEY (CODE_ID,CODE),
    FOREIGN KEY TB_COMM_CDD_FK1 (CODE_ID) REFERENCES TB_COMM_CD(CODE_ID)
  ) ;

CREATE UNIQUE INDEX TB_COMM_CDD_PK ON TB_COMM_CDD
(
  CODE_ID,
  CODE
)
;

CREATE INDEX TB_COMM_CDD_i01 ON TB_COMM_CDD
(
  CODE_ID
)
;

/* ##################################################################### */

CREATE TABLE TB_USER
  (
    USER_ID       VARCHAR (20) NOT NULL ,
    PASSWORD      VARCHAR (200) NOT NULL ,
    PASSWORD_HINT VARCHAR (100) ,
    PASSWORD_CNSR VARCHAR (100) ,
    IHIDNUM       VARCHAR (200) ,
    USER_NM       VARCHAR (50) NOT NULL ,
    ZIP           VARCHAR (6) NOT NULL ,
    ADRESS        VARCHAR (100) NOT NULL ,
    AREA_NO       VARCHAR (4) NOT NULL ,
    USER_STATUS   VARCHAR (15) ,
    DETAIL_ADRESS VARCHAR (100) ,
    END_TELNO     VARCHAR (4) NOT NULL ,
    PHONE         VARCHAR (20) NOT NULL ,
    USER_FAX      VARCHAR (20) ,
    EMAIL         VARCHAR (50) ,
    MIDDLE_TELNO  VARCHAR (4) NOT NULL ,
    SEX           CHAR (1) ,
    CREATE_DT     DATETIME,
    PRIMARY KEY (USER_ID)
  ) ;

CREATE UNIQUE INDEX TB_USER_PK ON TB_USER
(
  USER_ID
)
;

/* ##################################################################### */

CREATE TABLE TB_GROUPINFO
  (
    GROUP_ID  CHAR (20) NOT NULL ,
    GROUP_NM  VARCHAR (60) NOT NULL ,
    CREATE_DT CHAR (20) NOT NULL ,
    GROUP_DC  VARCHAR (100),
    PRIMARY KEY (GROUP_ID)
  ) ;

CREATE UNIQUE INDEX TB_GROUPINFO_PK ON TB_GROUPINFO
(
  GROUP_ID
)
;

/* ##################################################################### */

CREATE TABLE RTB_GROUP_USER
  (
    TB_USER_USER_ID       VARCHAR (20) NOT NULL ,
    TB_GROUPINFO_GROUP_ID CHAR (20) NOT NULL ,
    CREATE_DT             VARCHAR (30),
    FOREIGN KEY RTB_GROUP_USER_FK1 (TB_USER_USER_ID) REFERENCES TB_USER(USER_ID),
    FOREIGN KEY RTB_GROUP_USER_FK2 (TB_GROUPINFO_GROUP_ID) REFERENCES TB_GROUPINFO(GROUP_ID),
    PRIMARY KEY (TB_USER_USER_ID, TB_GROUPINFO_GROUP_ID)
    
  )

CREATE UNIQUE INDEX RTB_GROUP_USER_PK ON RTB_GROUP_USER
(
  TB_USER_USER_ID, TB_GROUPINFO_GROUP_ID
)
;
  
  
/* ##################################################################### */

CREATE TABLE TB_AUTHORINFO
  (
    AUTHOR_CODE VARCHAR (30) NOT NULL ,
    AUTHOR_NM   VARCHAR (60) NOT NULL ,
    AUTHOR_DC   VARCHAR (200) ,
    CREATE_DT   CHAR (20) NOT NULL,
    PRIMARY KEY (AUTHOR_CODE)
  ) ;

CREATE UNIQUE INDEX TB_AUTHORINFO_PK ON TB_AUTHORINFO
(
  AUTHOR_CODE
)
;

/* ##################################################################### */

CREATE TABLE RTB_GROUP_AUTHOR
  (
    TB_GROUPINFO_GROUP_ID     CHAR (20) NOT NULL ,
    TB_AUTHORINFO_AUTHOR_CODE VARCHAR (30) NOT NULL ,
    CREATE_DT                 DATETIME,
    FOREIGN KEY RTB_GROUP_USER_FK1 (TB_AUTHORINFO_AUTHOR_CODE) REFERENCES TB_AUTHORINFO(AUTHOR_CODE),
    FOREIGN KEY RTB_GROUP_USER_FK2 (TB_GROUPINFO_GROUP_ID) REFERENCES TB_GROUPINFO(GROUP_ID),
    PRIMARY KEY (TB_GROUPINFO_GROUP_ID, TB_AUTHORINFO_AUTHOR_CODE)
  )
  
  CREATE UNIQUE INDEX RTB_GROUP_AUTHOR_PK ON RTB_GROUP_AUTHOR
(
  TB_GROUPINFO_GROUP_ID, TB_AUTHORINFO_AUTHOR_CODE
)
;

/* ##################################################################### */
  
CREATE TABLE TB_MENUINFO
  (
    MENU_NM           VARCHAR (60) NOT NULL ,
    MENU_NO           NUMERIC (20) NOT NULL ,
    MENU_URL           VARCHAR (250) ,
    UPPER_MENU_NO     NUMERIC (20) ,
    MENU_ORDR         NUMERIC (5) NOT NULL ,
    MENU_DC           VARCHAR (250) ,
    RELATE_IMAGE_PATH VARCHAR (100) ,
    RELATE_IMAGE_NM   VARCHAR (60) ,
    PRIMARY KEY (MENU_NO),
    FOREIGN KEY TB_MENUINFO_FK1 (UPPER_MENU_NO) REFERENCES TB_MENUINFO(MENU_NO)
    ON DELETE CASCADE
  ) ;


CREATE UNIQUE INDEX TB_MENUINFO_PK ON TB_MENUINFO
(
  MENU_NO
)
;


CREATE INDEX TB_MENUINFO_i02 ON TB_MENUINFO
(
  UPPER_MENU_NO
)
;

/* ##################################################################### */

CREATE TABLE RTB_MENU_AUTHOR
  (
    MENU_NO        NUMERIC (20) NOT NULL ,
    AUTHOR_CODE    VARCHAR (30) NOT NULL ,
    FOREIGN KEY RTB_MENU_AUTHORFK1 (MENU_NO) REFERENCES TB_MENUINFO(MENU_NO),
    FOREIGN KEY RTB_MENU_AUTHORFK2 (AUTHOR_CODE) REFERENCES TB_AUTHORINFO(AUTHOR_CODE)
  ) ;

  
CREATE UNIQUE INDEX RTB_MENU_AUTHOR_PK ON RTB_MENU_AUTHOR
(
  MENU_NO,
  AUTHOR_CODE
)
;



CREATE INDEX RTB_MENU_AUTHOR_i02 ON RTB_MENU_AUTHOR
(
  MENU_NO
)
;


CREATE INDEX RTB_MENU_AUTHOR_i04 ON RTB_MENU_AUTHOR
(
  AUTHOR_CODE
)
;

/* ##################################################################### */

CREATE TABLE TB_ROLEINFO
  (
    ROLE_CODE  VARCHAR (50) NOT NULL ,
    ROLE_NM    VARCHAR (60) NOT NULL ,
    ROLE_PTTRN VARCHAR (300) ,
    ROLE_DC    VARCHAR (200) ,
    ROLE_TY    VARCHAR (80) ,
    ROLE_SORT  VARCHAR (10) ,
    CREATE_DT  CHAR (20) NOT NULL,
    PRIMARY KEY (ROLE_CODE)
  ) ;

CREATE UNIQUE INDEX TB_ROLEINFO_PK ON TB_ROLEINFO
(
  ROLE_CODE
)
;

/* ##################################################################### */

CREATE TABLE RTB_AUTHOR_ROLE
  (
    AUTHOR_CODE VARCHAR (30) NOT NULL ,
    ROLE_CODE   VARCHAR (50) NOT NULL ,
    PRIMARY KEY (AUTHOR_CODE,ROLE_CODE),
    FOREIGN KEY RTB_AUTHOR_ROLE_FK1 (AUTHOR_CODE) REFERENCES TB_AUTHORINFO(AUTHOR_CODE)
    ON DELETE CASCADE,
    FOREIGN KEY RTB_AUTHOR_ROLE_FK2 (ROLE_CODE) REFERENCES TB_ROLEINFO(ROLE_CODE)
    ON DELETE CASCADE
  ) ;

CREATE UNIQUE INDEX RTB_AUTHOR_ROLE_PK ON RTB_AUTHOR_ROLE
(
  AUTHOR_CODE,
  ROLE_CODE
)
;



CREATE INDEX RTB_AUTHOR_ROLE_i01 ON RTB_AUTHOR_ROLE
(
  AUTHOR_CODE
)
;



CREATE INDEX RTB_AUTHOR_ROLE_i02 ON RTB_AUTHOR_ROLE
(
  ROLE_CODE
)
;





